{"version":3,"file":"static/js/884.cb1eb222.chunk.js","mappings":"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","sources":["pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import { Suspense, lazy, useEffect, useRef, useState } from \"react\";\nimport { Link, NavLink, Route, Routes, useLocation, useParams } from \"react-router-dom\"\nimport { getMovieDetails } from \"services/api\";\nimport { Loader } from \"components/Loader/Loader\";\nimport css from '../components/App.module.css';\n\nconst Cast = lazy(() => import('components/Cast/Cast'));\nconst Reviews = lazy(() => import('components/Reviews/Reviews'));\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? \"/\");\n  const BASE_URL = 'https://image.tmdb.org/t/p/w300';\n\nuseEffect(() => {\n   if(!movieId) return;\n\n  const movieDetails = async () => {\n\n    try {\n      setIsLoading(true);\n      const movieData = await getMovieDetails(movieId);\n      setMovie(movieData);\n\n    } catch (error) {\n       console.log(error);\n    } finally {\n        setIsLoading(false);\n    }}; \n\n    movieDetails();\n}, [movieId]);\n\n  return (\n    <div>\n      <Link to={backLinkHref.current}>\n        <button \n         type=\"button\" \n         className={css.goBack_button}>\n            Go Back\n        </button>\n      </Link>\n      {isLoading && <Loader />}\n\n        {movie !== null && (\n      <div>\n        <img \n            src={BASE_URL + movie.poster_path} \n            alt={movie.original_title} />\n        <div>\n           <h1>{movie.title}</h1>\n            <p>User score: {movie.vote_average}</p>\n            <h2>Overview</h2>\n            <p>{movie.overview}</p>\n            <h3>Genres</h3>\n            <p>\n            {movie.genres.map((genre) => {\n                return genre.name;\n            }).join(', ')}\n        </p>\n        </div>\n      </div>\n        )}\n\n        <p>Additional information</p>\n        <div>\n            <NavLink to='cast' className={({ isActive }) => \n           `${css['header_link']} ${isActive ? css.active : ''}`}>Cast</NavLink>\n            <NavLink to='reviews' className={({ isActive }) => \n           `${css['header_link']} ${isActive ? css.active : ''}`}>Reviews</NavLink> \n        </div>\n      <Suspense fallback={<Loader />}>\n        <Routes>\n         <Route path='cast' element={<Cast /> } />\n         <Route path='reviews' element={<Reviews /> } />\n        </Routes>\n      </Suspense>\n    </div>\n  )\n}\n\nexport default MovieDetails;","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'd8c620888c22581099bcd5e45550c95c';\n\nexport const getTrendMovies = async () => {\n    const { data } = await axios.get(`${BASE_URL}trending/movie/day?language=en-US&api_key=${API_KEY}`);\n\n    return data;\n}\n\nexport const searchMovies = async (query) => {\n    const { data } = await axios.get(`${BASE_URL}search/movie?query=${query}&include_adult=false&language=en-US&page=1&api_key=${API_KEY}`);\n\n    return data.results; \n}\n\nexport const getMovieDetails = async (movieId) => {\n    const { data } = await axios.get(`${BASE_URL}movie/${movieId}?language=en-US&api_key=${API_KEY}`);\n\n    return data; \n}\n\nexport const getMovieCredits = async (movieId) => {\n    const { data } = await axios.get(`${BASE_URL}movie/${movieId}/credits?language=en-US&api_key=${API_KEY}`);\n    \n    return data.cast; \n}\n\nexport const getMovieReviews = async (movieId) => {\n    const { data } = await axios.get(`${BASE_URL}movie/${movieId}/reviews?language=en-US&page=1&api_key=${API_KEY}`);\n\n    return data.results; \n}\n\n"],"names":["Cast","lazy","Reviews","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","isLoading","setIsLoading","location","useLocation","backLinkHref","useRef","state","from","useEffect","movieDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieData","_context","prev","next","getMovieDetails","sent","t0","console","log","finish","stop","apply","arguments","_jsxs","children","_jsx","Link","to","current","type","className","css","Loader","src","poster_path","alt","original_title","title","vote_average","overview","genres","map","genre","name","join","NavLink","_ref2","isActive","concat","_ref3","Suspense","fallback","Routes","Route","path","element","BASE_URL","API_KEY","getTrendMovies","_yield$axios$get","data","axios","abrupt","searchMovies","_callee2","query","_yield$axios$get2","_context2","results","_x","_callee3","_yield$axios$get3","_context3","_x2","getMovieCredits","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","getMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}